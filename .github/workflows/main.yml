---
# based on https://github.com/mvdan/github-actions-golang
name: test
permissions:
  contents: write

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["main"]
    paths-ignore: ["docs/**"]
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install Pulumi CLI
        run: curl -fsSL https://get.pulumi.com | sh

      - name: Downloads the dependencies
        run: make download

      - name: Lints all code with golangci-lint
        run: make lint

      - name: Runs all tests
        run: make test

      - name: Build provider
        run: make build

      - name: Generate SDKs
        run: make gen-sdk

      - name: Check for SDK changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push SDK updates
        if: steps.verify-changed-files.outputs.changed == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add sdk/
          git commit -m "chore: update generated SDKs" || exit 0
          git push

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install Pulumi CLI
        run: curl -fsSL https://get.pulumi.com | sh

      - name: Downloads the dependencies
        run: make download

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build provider
        run: make build

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: out/build/pulumi-resource-hcloud-upload-image
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
